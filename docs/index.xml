<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Peacalm Notes - lishuangquan&#39;s website</title>
    <link>https://peacalm.github.io/</link>
    <description>Recent content on Peacalm Notes - lishuangquan&#39;s website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 31 Mar 2022 02:15:21 +0800</lastBuildDate>
    
        <atom:link href="https://peacalm.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What Is a Good Local Cache</title>
      <link>https://peacalm.github.io/post/what-is-a-good-local-cache/</link>
      <pubDate>Thu, 31 Mar 2022 02:15:21 +0800</pubDate>
      
      <guid>https://peacalm.github.io/post/what-is-a-good-local-cache/</guid>
      
        <description>&lt;p&gt;缓存技术，Cache，特别是LocalCache，是软件开发中非常常用的组件，也是提高性能的最简单的方式。
Cache一般有个SideCar和Wrapper两种使用模式。&lt;/p&gt;
&lt;h1 id=&#34;cache的两种使用模式sidecar模式和wrapper模式&#34;&gt;Cache的两种使用模式：SideCar模式和Wrapper模式&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;SideCar模式：需要应用程序自己主动访问数据源服务并读写缓存。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这种模式可以是LocalCache，与应用程序集成部署，但是由于Cache功能与业务逻辑无耦合，非常独立，所以出现了很多优秀的独立出来的非常通用的第三方独立缓存服务，
比如Redis，Memcached，cachelib等。
独立缓存服务一般与应用程序分开，独立部署，需要通过网络进行交互，数据量较大或对性能要求较高时，网络带宽消耗、延时、数据序列化反序列化的CPU消耗不能忽视。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Cache
↑  
|  
App  --&amp;gt;   DataSource
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Wrapper模式：应用程序只需要访问缓存，缓存具有代理能力可以帮助应用程序去访问数据源服务。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这种模式需要对Cache做特殊化定制，一般是LocalCache，与应用程序集成部署，只需在内存中进行交互，性能较高。如果Cache设计的好，可以极大简化业务代码，
可以提高组件可复用性。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;App --&amp;gt; Cache --&amp;gt; DataSource
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;那么怎么才算是一个好的LocalCache呢？从业务应用上要灵活好用，满足多种多样的业务需求，同时也要具有基本的高性能。&lt;/p&gt;
&lt;h1 id=&#34;灵活好用&#34;&gt;灵活好用&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可以动态修改CacheSize，一般指缓存的数据条目数。&lt;/li&gt;
&lt;li&gt;具有单Key读写接口，也具有Batch读写接口。&lt;/li&gt;
&lt;li&gt;可以设置一个数据的默认过期时间，也可以动态设置每一个Key的过期时间，特别的，在插入或读取时都可以设置和判断过期。&lt;/li&gt;
&lt;li&gt;可以配置读取数据源服务的CallbackOnFetching方法，以便应用Wrapper模式，当Key不存在或过期时，用来获取新数据。&lt;/li&gt;
&lt;li&gt;过期数据不自动删除，可配置一个CallbackOnExpiration方法来注入对过期数据的处理方式。比如可以删除数据，或把过期数据发送到某个消息队列、写入硬盘等，
或不对过期数据做任何处理，只等缓存用满以后自动逐出。&lt;/li&gt;
&lt;li&gt;支持多种QueryFlags:
&lt;ul&gt;
&lt;li&gt;uncacheable: 本次Query不读写Cache，只从数据源服务获取数据并返回，不写入Cache，相当于没有Cache。&lt;/li&gt;
&lt;li&gt;refresh:     本次Query不读取Cache数据，重新从数据源服务获取最新数据，并写入Cache，相当于刷新缓存。&lt;/li&gt;
&lt;li&gt;peek:        本次Query只读取Cache数据，即时Miss或Expired也不从数据源服务获取最新数据。&lt;/li&gt;
&lt;li&gt;stale:       本次Query读取Cache数据时，可以接受过期的数据。&lt;/li&gt;
&lt;li&gt;fast:        本次Query只返回Cache里的数据，如果Miss或Expired，则发送reload任务刷新缓存，不阻塞当前Query。&lt;/li&gt;
&lt;li&gt;preload:     本次Query如果在Cache中读取到合法数据，但是数据快过期了，比如已过了过期时间的80%，则发送一个eload任务来刷新缓存。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;内置线程池可执行Reload任务，从数据源服务获取数据并填充Cache。&lt;/li&gt;
&lt;li&gt;可配置内置WatchDog现成，检查快过期的数据，并发送Reload任务。&lt;/li&gt;
&lt;li&gt;可配置缓存策略，例如：LRU，LRU-k(lazy list adjustment)，FIFO等。&lt;/li&gt;
&lt;li&gt;可迭代操作Cache中的每一条数据，例如把Cache中的数据读出写入到其他设备。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;高性能&#34;&gt;高性能&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;并发性好。例如采用分桶机制、采用TBB的高性能并发容器库等。&lt;/li&gt;
&lt;li&gt;内存使用效率高。&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>字节跳动发展史</title>
      <link>https://peacalm.github.io/post/bytedance-growth/</link>
      <pubDate>Thu, 17 Mar 2022 02:50:04 +0800</pubDate>
      
      <guid>https://peacalm.github.io/post/bytedance-growth/</guid>
      
        <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2012年3月9日，字节跳动Bytedance成立于北京海淀锦秋家园一个四居室内。&lt;strong&gt;天使轮融资&lt;/strong&gt;，500万元，顺为资本、晨兴资本投资。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2012年5月，内涵段子发布。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2012年7月，&lt;strong&gt;A轮融资&lt;/strong&gt;，500万美元，SIG海纳亚洲独家投资。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2012年8月，今日头条1.0版本上线。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2012年10月，累计用户数超过1000万。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2012年底，1500万激活用户数，近160万DAU。今日头条DAU超过100万？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2013年5月下旬，&lt;strong&gt;B轮融资&lt;/strong&gt;，5000万美元，俄罗斯投资集团DST独家投资。公司估值千万+美元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2013年5月，第一次搬家，搬入盈都大厦10层。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2013年8月，今日头条用户数突破5000万。开始尝试商业化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2013年11月，今日头条和内涵段子激活用户数超过6000万，DAU接近600万，公司人数接近一百人。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2013年12月，累计用户数超过9500万。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2014年4月，今日头条MAU3000万。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2014年6月，今日头条激活用户数1.2亿，MAU4000万。&lt;strong&gt;C轮融资&lt;/strong&gt;，1亿美元，红杉资本、新浪微博基金领投。公司估值5亿美元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2014年12月，累计激活用户超过2亿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2014年底，公司人数约500人？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2015年1月，今日头条累计用户2.2亿，DAU2000万。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2015年4月，累计激活用户超过2.5亿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2015年7月，总DAU超过5000万（WAP端+移动端），累计激活用户超过2.7亿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2015年9月，累计激活用户数超过3亿，DAU超过3000万。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2015年9月8日，今日头条推出头条号“千人万元”计划，同时推出“新媒体孵化器计划”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2015年底，今日头条DAU3300万，公司人数大约1200人。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2016年2月，今日头条开辟“头条寻人”平台。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2016年2月28日，从盈都搬到了中航广场。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2016年6月，累计激活用户数超过5亿，DAU超过4800万。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2016年8月，今日头条战略投资国内知名图片库东方IC。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2016年8月底，累计激活用户数超过5.5亿，DAU超过6000万。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2016年9月，抖音上线。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2016年9月20日，张一鸣宣布将在未来一年拿出10亿人民币扶持短视频创作者。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2016年10月15日，今日头条领投印度版今日头条Dailyhunt D轮融资。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2016年10月，今日头条激活用户数超过6亿，MAU超过1.4亿，DAU超过6600万，单用户日均使用时长超过76分钟。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2016年12月，&lt;strong&gt;D轮融资&lt;/strong&gt;，10亿美元，建银国际、红杉资本投资。公司估值110亿美元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2016年底，今日头条累计激活用户数超过7亿，DAU超过7800万。公司人数4千？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2016年营收约60亿元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017年2月，5000万美元全资收购美国移动短视频创作者社区Flipagram。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017年5月，TikTok上线。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017年9月，&lt;strong&gt;E轮融资&lt;/strong&gt;，2亿美元，老虎基金、美国泛大西洋(600558)投资集团投资。公司估值220亿美元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017年11月，5000万美元投资猎豹移动旗下Live.me，8660万美元收购猎豹移动旗下News Republic，10亿美元收购Musical.ly，系彼时最大收购。
Musical.ly MAU6000万，美国MAU2000万，49%的用户都在美国。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017年11月，公司内部开始全面使用飞书（当时名为Lark）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017年底，公司人数1.3万？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017年营收约160亿元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2018年1月，TikTok MAU5500万。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2018年2月，3亿美元收购Faceu激萌。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2018年4月，抖音DAU破亿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2018年4月10日下午，内涵段子被关停。损失2000万DAU，50亿年收入。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2018年4月，公司品牌名从&amp;quot;今日头条&amp;quot;改为&amp;quot;字节跳动&amp;quot;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2018年10月，&lt;strong&gt;Pre-IPO轮投资&lt;/strong&gt;，40亿美元，春华资本、软银中国、云锋基金投资。公司估值750亿美元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2018年12月，TikTok MAU 2.7亿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2018年底，公司人数3.5万？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2018年营收约500亿元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2019年1月，3亿人民币收购锤子科技部分专利使用权，探索教育领域相关业务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2019年7月，成立教育部门，陈林为负责人。朱文佳接替陈林作为今日头条CEO。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2019年12月，TikTok MAU 5亿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2019年底，公司人数6万？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2019年营收约1400亿元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2020年1月，抖音宣布DAU超过4亿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2020年3月30日，&lt;strong&gt;战略融资&lt;/strong&gt;，Tiger Global Management(老虎环球基金)投资，未披露金额。公司估值达1000亿美元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2020年6月，员工数7万？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2020年7月，TikTok MAU 6.9亿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2020年9月，抖音宣布DAU突破6亿（抖音火山合并）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2020年10月，&lt;strong&gt;战略融资&lt;/strong&gt;，20亿美元，红杉资本、KKR等投资。公司估值1800亿美元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2020年底，全球所有应用程序的月活用户数达19亿。员工数超过十万人，其中正式员工近9万人。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2020年营收约2400亿元。营收343亿美元，毛利润增长93%至190亿美元，经营亏损21亿美元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2021年3月，40美元收购沐瞳科技（100亿人民币现金和价值150亿人民币的股权）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2021年5月20日，张一鸣宣布卸任CEO，梁汝波继任，年底完成交接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2021年8月，收购VR创业公司Pico，50亿元？15亿美元(97亿人民币)？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2021年9月，TikTok MAU 10亿，DAU 6亿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2021年11月，梁汝波宣布组织调整，成立6个业务板块：抖音（包括头条、西瓜、搜索、百科等国内信息和服务业务）、大力教育、飞书、
火山引擎（企业级技术服务云平台）、朝夕光年（游戏业务）、TikTok。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2021年营收580亿美元，约3700亿人民币，同比增长70%。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>C&#43;&#43;轻量级输出库MyOStream：可打印输出所有成员可迭代的容器</title>
      <link>https://peacalm.github.io/post/myostream/</link>
      <pubDate>Thu, 17 Mar 2022 01:12:25 +0800</pubDate>
      
      <guid>https://peacalm.github.io/post/myostream/</guid>
      
        <description>&lt;h1 id=&#34;懒汉的烦恼&#34;&gt;懒汉的烦恼&lt;/h1&gt;
&lt;p&gt;使用C++编程时对数据打印输出比较麻烦，需要自行用for循环将vector, list, map等容器的成员一一打印输出。
相比之下Python, Golang等语言就可以直接对所有数据类型打印输出，这对于debug是很友好的特性。
因此，我开发了一个简单的C++库，几乎能够对所有容器直接打印输出，说几乎是因为我们只能对成员可访问可迭代的容器支持这个特性。&lt;/p&gt;
&lt;p&gt;支持的类型如下，以及他们的组合类型：&lt;/p&gt;
&lt;p&gt;std::pair, std::tuple, std::array, std::deque,
std::forward_list, std::initializer_list, std::list, std::vector,
std::set, std::multiset, std::unordered_set, std::unordered_multiset,
std::map, std::multimap, std::unordered_map, std::unordered_multimap.&lt;/p&gt;
&lt;h1 id=&#34;acmer助手&#34;&gt;ACMer助手&lt;/h1&gt;
&lt;p&gt;特别的，我们在打ACM比赛或做类似的OJ题目的过程中，需要debug的时候，我们不仅想要打印容器里的值，
而且还想要同时打印出变量名，以便我们在解题时，如果定义了多个容器变量，我们可以知道哪个变量的值使哪一个值，
因此我设计了watch功能。&lt;/p&gt;
&lt;p&gt;例如，如下debug代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#ifndef ONLINE_JUDGE
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;myostream.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;myostream&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;ostream mycout(std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout.rdbuf());
&lt;span style=&#34;color:#75715e&#34;&gt;#define watch(...) MYOSTREAM_WATCH(mycout, &amp;#34; = &amp;#34;, &amp;#34;\n&amp;#34;, &amp;#34;\n\n&amp;#34;, __VA_ARGS__)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#else
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define watch(...)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#endif
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
  std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; v{&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;};
  watch(v);
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在本地编译运行，可以输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;v = [1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而在线提交，或定义了宏ONLINE_JUDGE后，则什么都不输出。&lt;/p&gt;
&lt;h1 id=&#34;附录&#34;&gt;附录&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/peacalm/myostream&#34;&gt;lib MyOStream on github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>About</title>
      <link>https://peacalm.github.io/about/</link>
      <pubDate>Wed, 02 Mar 2022 20:55:18 +0800</pubDate>
      
      <guid>https://peacalm.github.io/about/</guid>
      
        <description>&lt;p&gt;Hi, I&amp;rsquo;m Shuangquan Li, from China!&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>

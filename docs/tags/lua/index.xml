<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lua on Peacalm Notes</title>
    <link>https://peacalm.github.io/tags/lua/</link>
    <description>Recent content in Lua on Peacalm Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 22 Oct 2024 22:20:14 +0800</lastBuildDate><atom:link href="https://peacalm.github.io/tags/lua/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lua C API中的迷惑行为 | Lua C API Confusions</title>
      <link>https://peacalm.github.io/post/2024/lua-c-api-confusions/</link>
      <pubDate>Tue, 22 Oct 2024 22:20:14 +0800</pubDate>
      
      <guid>https://peacalm.github.io/post/2024/lua-c-api-confusions/</guid>
      <description>There are some very confusing behaviors in Lua C API. Here are some explanations for these. (Tested on Lua 5.4) 1. Type of number, integer, string Operations like lua_isnumber, lua_pushinteger, lua_isstring don&amp;rsquo;t mean checking the value&amp;rsquo;s type: Values with type number can also get true of lua_isstring. (Number is also string) There are no integer types in Lua. Values generated by lua_pushinteger has type number. Only values generated by lua_pushinteger</description>
    </item>
    
    <item>
      <title>成为Contributor | To Be a Contributor</title>
      <link>https://peacalm.github.io/post/2023/to-be-a-contributor/</link>
      <pubDate>Wed, 17 May 2023 22:51:37 +0800</pubDate>
      
      <guid>https://peacalm.github.io/post/2023/to-be-a-contributor/</guid>
      <description>说来惭愧，身为一名程序员，从业五年多，竟然最近一年才开始在开源世界为他人的项目贡献代码。 最近我在阅读一个写得很棒的开源小代码库的时候发现他有</description>
    </item>
    
  </channel>
</rss>
